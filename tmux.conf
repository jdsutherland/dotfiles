# Ctrl-s prefix key. Default => C-b. Send C-s with repeat option via C-s C-s
unbind-key C-b
set -g prefix C-space
bind -r C-space send-prefix

# Start window numbering at 1 (default => 0)
# set -g base-index 1 # trying out the default again as this makes
# the 0th pane special, and the first and second more clear

set -g clock-mode-style 12

# Renumber windows after removing one
set -g renumber-windows on

# use 256 colors
set -g default-terminal "screen-256color"

# Make Vim responsive to esc
set -s escape-time 0

# Keep plenty of history for scrollback
set -g history-limit 10000

bind Escape copy-mode

bind m split-window -h 'reattach-to-user-namespace mutt'

bind g split-window -h -p 50 'gitsh'

# Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

unbind -t vi-copy Space
bind -t vi-copy Space jump-again
bind-key -t vi-copy 0 back-to-indentation

bind y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '
bind C-y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '
bind m command-prompt -p man:   "split-window -h 'man %1'"
bind R run "tmux split-window -h 'rake routes ; read'"

# Smart pane switching with awareness of vim splits
# See this blog post for additional detail:
# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Secondary binding for C-l to retain redraw
bind C-l send-keys 'C-l'

# Easy rotating of panes
bind C-k swap-pane -U

# Quickly view system & process info in htop
bind-key h split-window -h "htop"

# Quick access to todo file
bind t split-window -h -c ~/notes "reattach-to-user-namespace nvim todo.md"
bind j split-window -h -c ~/journal "reattach-to-user-namespace nvim $(date '+%a-%b%d-%Y').md"

# Quick access to wiki
bind w split-window -h -c ~/wiki "reattach-to-user-namespace vim +CtrlP"
bind W split-window -h -c ~/wiki 'reattach-to-user-namespace vim routines.md +"/^Morning Work" +"set foldlevel=0" +"nohlsearch" +"normal zv"'
bind u split-window -h -c ~/wiki "reattach-to-user-namespace vim +'CtrlP upcase'"

# Create a new session from fuzzy project list
bind C-t split-window -v "source ~/.zshrc && tm-select-session"

# Show pane numbers for half a second
set -g display-panes-time 300

# status bar stuff
set -g status-left-length 40

# Binding to toggle synchronize panes
is_synched='[[ $(tmux show-window-options -v synchronize-panes) == "on" ]]'
bind-key S if-shell "$is_synched" "set-window-option synchronize-panes off" "set-window-option synchronize-panes on"

# Simplify status bar display.
set -g status-left '[#S]'
# set -g status-right "#{?pane_synchronized,--SYNCED--,} #(battery -t -g black)  #(date '+%a, %b %d - %I:%M') "
set -g status-right '#(~/.bin/gmusicplaying.sh)'

# Dismiss current pane to background window
bind b break-pane -d
bind C-b send-keys 'tat && exit' 'C-m'
bind-key ! run-shell '(tmux switch-client -l || tmux switch-client -n) && tmux kill-session -t "#S" || tmux kill-session'
bind-key J command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane/window (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"
bind-key w command-prompt -p "window #: "  "swap-window -t '%%'"

# more intuitive keybindings for splitting
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

bind c new-window -c "#{pane_current_path}"

# Make C-j display a selectable list of sessions
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Quick session switching back and forth. I never use the built in layouts
# (default mapping for Space), so I reclaimed the key for this
bind-key Space switch-client -l

# Keep window names as I set them
setw -g automatic-rename off

# The base index for windows and panes to 1 instead of the default 0.
# # Now prefix 1 is the first window instead of a prefix 0 being the first.
set -g base-index 1
# setw -g pane-base-index 1 # not recognized by my tmux

# Easy reloading of the tmux.conf configuration file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"


# Search for URL in scrollback, open with o
# bind-key u copy-mode \; send-keys "?https" "C-m"
# bind-key -t vi-copy o copy-pipe "xargs open"

# Set the term environment variable when using tmux
set -g default-terminal "screen-256color"

# Provide access to the clipboard for pbpaste, pbcopy (details: http://goo.gl/DN82E)
set-option -g default-command "reattach-to-user-namespace -l zsh"
set-window-option -g automatic-rename on

# bind resizing of panes to H,J,K,L (resizes by steps of 10 lines/columns)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-strategy-vim 'session'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'
# for neovim

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
