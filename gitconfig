[user]
  name = Jeff Sutherland
  email = jeffdsuth@gmail.com
[color]
  ui = true
[alias]
  aa = add --all
  added = log --topo-order --stat --patch --diff-filter=A
  adp = add --patch
  b = branch
  bhist = "!git --no-pager reflog $(git rev-parse --abbrev-ref HEAD)"
  bom = push --set-upstream origin master
  browse = !hub browse
  bselect = "!branches=$(git branch | grep -v $(git rev-parse --abbrev-ref HEAD)) && branch=$(echo \"$branches\" | fzf --reverse +s +m) && git checkout $(echo \"$branch\" | sed \"s/.* //\")"
  ca = commit --amend
  car = commit --amend --no-edit
  cistatus = "!hub ci-status"
  co = checkout
  compare = !hub compare
  conflicted = !nvim +Conflicted
  copysha = "!git rev-parse HEAD | tr -d '\n' | pbcopy"
  count = !git log --oneline | wc -l | awk '{print $1}'
  current-branch = !git rev-parse --abbrev-ref HEAD 2> /dev/null | sed 's/^HEAD$//'
  dc = diff --word-diff --cached --color-words
  deleted = log --topo-order --stat --patch --diff-filter=D
  df = diff --word-diff --color-words
  diffpull=!git fetch $1 && git log --stat --patch HEAD..@{u}
  dsf = "!f() { [ \"$GIT_PREFIX\" != \"\" ] && cd "$GIT_PREFIX"; git diff --color $@ | diff-so-fancy | less --tabs=4 -RFX; }; f"
  find = log --pretty=\"format:%Cgreen%H %Cblue%s\" --name-status -i -E --grep
  fpop = !git stash show -p | git apply && git stash drop
  full-commit = !git cat-file -p $(git rev-parse HEAD)
  glog = log -E -i --grep
  issues = !hub browse -- issues
  lnames = !git --no-pager show --name-only $1
  main2master = !git branch -m master main && git branch -u origin/main
  master = checkout master
  mb = !git merge-base HEAD $1
  merge-commits = "!funct() { git log --merges --reverse --oneline --ancestry-path $1..origin | grep \"Merge pull request\";  }; funct"
  mru = for-each-ref --sort=-committerdate --count=10 refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
  mup = !git checkout master && git pull && git checkout -
  next-commit = !git checkout $(git log --reverse --ancestry-path --pretty=%H HEAD..master | head -1)
  no-ff = merge --no-ff
  opr = "!funct() { open \"`git web-url`/pull/`git pr-number $1`\" ;}; funct"
  patch = !git --no-pager diff --no-color
  pb = log --patch --follow
  pbr = log --patch --reverse --follow
  pf = push --force-with-lease
  pl = pull
  plr = pull --rebase
  pom = push -u origin master
  pr-number = "!funct() { git merge-commits $1 | head -n1 | sed -n \"s/^.*Merge pull request #\\\\s*\\\\([0-9]*\\\\).*$/\\\\1/p\"; }; funct"
  ps = push
  pulls = !hub browse -- pulls
  rbc = rebase --continue
  renamed = log --topo-order --stat --patch --diff-filter=R
  ri = rebase -i
  rim = !git rebase --interactive $(git merge-base master HEAD)
  riu = !git rebase -i $(git upstream)
  rmdeleted = !git rm $(git ls-files --deleted)
  rom = remote add origin
  root = rev-list --max-parents=0 HEAD
  rpo = remote prune origin
  rr = remote rename jdsutherland fork
  sal = !git sla # Accepting that I will continue to mistype this
  sdot = status . --short --branch
  search = log -S
  si = status --ignored
  sl = log --oneline --decorate --graph -20
  sla = log --oneline --decorate --graph --all -20
  slap = log --oneline --decorate --graph --all
  slp = log --oneline --decorate --graph
  ssp = show --patch-with-stat
  stat = show --stat
  trust = !mkdir .git/safe
  unchange = checkout --
  uncommit = reset --soft HEAD^
  unreleased = !git l production/master..master
  unstage = reset
  untrack = update-index --assume-unchanged
  update = !git fetch upstream && git rebase upstream/`git rev-parse --abbrev-ref HEAD`
  upstream = rev-parse --abbrev-ref --symbolic-full-name @{upstream}
  ureset = !git upstream && git reset --hard $(git upstream)
  vdf = difftool
  vv = branch -vv
  web-url = "!funct() { git config remote.origin.url | sed -e\"s/git@/https:\\/\\//\" -e\"s/\\.git$//\" | sed -E \"s/(\\/\\/[^:]*):/\\1\\//\"; }; funct"
[core]
  excludesfile = ~/.gitignore
  attributesFile = ~/.gitattributes
  editor = "nvim"
  pager = diff-so-fancy | less --tabs=4 -RFX
  autocrlf = input
[pager]
  ; TODO: remove full path once https://github.com/so-fancy/diff-so-fancy/pull/398 merged
  diff = ~/.dotfiles/bin/diff-so-fancy/diff-so-fancy | less --tabs=4 -RFX --pattern '^(Date|added|deleted|modified): '
[push]
  default = simple
[pull]
  rebase = true
[merge]
  ff = only
[credential]
  helper = osxkeychain
[rerere]
  enabled = true
[pull]
  rebase = true
[github]
  user = jdsutherland
[fetch]
  prune = true
[commit]
  template = ~/.gitmessage
[gitsh]
  noGreeting = true
  defaultCommand = status --short --branch && :echo
[gitsh "color"]
  default = cyan
  untracked = yellow
  modified = red
[help]
  autocorrect = 1
[color]
  ui = always
[color "diff"]
  meta = yellow bold
  commit = green bold
  frag = magenta bold
  old = red bold
  new = green bold
  whitespace = red reverse
[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = "red bold 52"
  newNormal = "green bold"
  newHighlight = "green bold 22"
[diff-so-fancy]
  markEmptyLines = false
[ghi]
  token = !security find-internet-password -a jdsutherland -s github.com -l 'ghi token' -w
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
[color "blame"]
  highlightRecent = 234, 23 month ago, 235, 22 month ago, 236, 21 month ago, 237, 20 month ago, 238, 19 month ago, 239, 18 month ago, 240, 17 month ago, 241, 16 month ago, 242, 15 month ago, 243, 14 month ago, 244, 13 month ago, 245, 12 month ago, 246, 11 month ago, 247, 10 month ago, 248, 9 month ago, 249, 8 month ago, 250, 7 month ago, 251, 6 month ago, 252, 5 month ago, 253, 4 month ago, 254, 3 month ago, 231, 2 month ago, 230, 1 month ago, 229, 3 weeks ago, 228, 2 weeks ago, 227, 1 week ago, 226
[blame]
  coloring = highlightRecent
  date = relative
[rebase]
  autoSquash = true
  autoStash = true
  stat = true
