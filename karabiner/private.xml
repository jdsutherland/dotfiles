<?xml version="1.0"?>
<root>
  <devicevendordef>
      <vendorname>LOGITECH</vendorname>
      <vendorid>0x046d</vendorid>
  </devicevendordef>
  <deviceproductdef>
    <productname>LOGITECH_K120</productname>
    <productid>0xc31c</productid>
  </deviceproductdef>
  <item>
    <name>Logitech K120 regular</name>
    <identifier>private.logitech_k120</identifier>
    <block>
      <device_only>DeviceVendor::LOGITECH, DeviceProduct::LOGITECH_K120</device_only>
      <!-- cmd/tab tap -->
      <autogen>
          --KeyOverlaidModifier--
          KeyCode::OPTION_R,

          KeyCode::COMMAND_R,
          ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
          KeyCode::TAB, ModifierFlag::COMMAND_R
      </autogen>
      <!-- hyper key -->
      <autogen>
          --KeyOverlaidModifier--
          KeyCode::OPTION_R,

          KeyCode::COMMAND_R,
          ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
          KeyCode::TAB, ModifierFlag::COMMAND_R
      </autogen>
    </block>
  </item>
  <item>
    <name>Logitech K120 terminal</name>
    <identifier>private.logitech_k120.terminal</identifier>
    <only>TERMINAL</only>
    <block>
      <device_only>DeviceVendor::LOGITECH, DeviceProduct::LOGITECH_K120</device_only>
      <!-- tmux zoom -->
      <autogen>
          --KeyOverlaidModifier--
          KeyCode::OPTION_L,

          KeyCode::OPTION_L,
          KeyCode::BACKQUOTE, ModifierFlag::OPTION_L
      </autogen>
      <!-- git log cur file history -->
      <autogen>
          --KeyOverlaidModifier--
          KeyCode::PC_APPLICATION,

          KeyCode::FN,
          KeyCode::Z, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L
      </autogen>
      <!-- git log cur file full history -->
      <autogen>
          --KeyOverlaidModifier--
          KeyCode::CONTROL_L,

          KeyCode::CONTROL_L,
          KeyCode::X, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L
      </autogen>
      <!-- git diff -->
      <autogen>
          --KeyOverlaidModifier--
          KeyCode::COMMAND_L,

          KeyCode::OPTION_L,
          KeyCode::C, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L
      </autogen>
      <!-- git diff staged -->
      <autogen>
          --KeyOverlaidModifier--
          KeyCode::COMMAND_R,

          KeyCode::OPTION_R,
          KeyCode::C, ModifierFlag::OPTION_L | ModifierFlag::CONTROL_L
      </autogen>
    </block>
  </item>
  <item>
    <name>Logitech K120 NOT terminal</name>
    <identifier>private.logitech_k120.not.terminal</identifier>
    <not>TERMINAL</not>
    <block>
      <device_only>DeviceVendor::LOGITECH, DeviceProduct::LOGITECH_K120</device_only>
      <!-- swap left/right cmd/alt -->
      <autogen>__KeyToKey__ KeyCode::OPTION_L, KeyCode::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::COMMAND_R</autogen>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::OPTION_R</autogen>
      <!-- chrome dev modifier -->
      <autogen>
          --KeyOverlaidModifier--
          KeyCode::COMMAND_R,
          KeyCode::COMMAND_L, ModifierFlag::OPTION_L,
          KeyCode::F, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L
      </autogen>
      <!-- chrome inspect ele on tap -->
      <autogen>
          --KeyOverlaidModifier--
          KeyCode::COMMAND_L,

          KeyCode::OPTION_L,
          KeyCode::C, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L
      </autogen>
    </block>
  </item>

  <appdef>
    <appname>STARCRAFT</appname>
    <equal>com.blizzard.Starcraft</equal>
  </appdef>
  <item>
    <name>Starcraft cmd, opt swap, center unit on tap</name>
    <identifier>com.starcraft.cmd-center</identifier>
    <only>STARCRAFT</only>
    <autogen>
        --KeyOverlaidModifier--
        KeyCode::COMMAND_L,

        KeyCode::OPTION_L,
        KeyCode::C, ModifierFlag::OPTION_L
    </autogen>
  </item>
  <item>
    <name>Starcraft SHIFT_L key tap select location</name>
    <appendix>SHIFT_L tap select location f4</appendix>
    <identifier>com.starcraft.shift-l</identifier>
    <only>STARCRAFT</only>
    <autogen>
        --KeyOverlaidModifier--
        KeyCode::SHIFT_L,

        KeyCode::SHIFT_L,
        KeyCode::F4
    </autogen>
  </item>
  <item>
    <name>Starcraft SHIFT_R key tap goto location</name>
    <appendix>SHIFT_L tap goto location f4</appendix>
    <identifier>com.starcraft.shift-r</identifier>
    <only>STARCRAFT</only>
    <autogen>
        --KeyOverlaidModifier--
        KeyCode::SHIFT_R,

        KeyCode::SHIFT_R,
        KeyCode::F4, ModifierFlag::SHIFT_L
    </autogen>
  </item>
  <item>
    <name>Starcraft swap F1 - 9</name>
    <appendix>Swap F1 with 9</appendix>
    <identifier>com.starcraft.f1-9</identifier>
    <only>STARCRAFT</only>
    <autogen>
      __KeyToKey__ KeyCode::F1, KeyCode::9
    </autogen>
  </item>

  <appdef>
    <appname>IBOOKS</appname>
    <equal>com.apple.iBooksX</equal>
  </appdef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Chrome</name>
    <url type="file">/Applications/Google Chrome.app</url>
  </vkopenurldef>
  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Canary</name>
    <url type="file">/Applications/Google Chrome Canary.app</url>
  </vkopenurldef>
  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_iTerm</name>
    <url type="file">/Applications/iTerm.app</url>
  </vkopenurldef>
  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_OneNote</name>
    <url type="file">/Applications/Microsoft OneNote.app</url>
  </vkopenurldef>
    <item>
      <name>Hyper+B to open Chrome ("B" for "Browser")</name>
      <identifier>com.jasonrudolph.hyper_b</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::B, ModifierFlag::COMMAND_R, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
        KeyCode::VK_OPEN_URL_APP_Chrome,
      </autogen>
    </item>
    <item>
      <name>Hyper+C to open ChromeCanary ("C" for "Canary")</name>
      <identifier>com.jasonrudolph.hyper_c</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::C, ModifierFlag::COMMAND_R, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
        KeyCode::VK_OPEN_URL_APP_Canary,
      </autogen>
    </item>
    <item>
      <name>Hyper+T to open iTerm ("T" for "Terminal")</name>
      <identifier>com.jasonrudolph.hyper_t</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::T, ModifierFlag::COMMAND_R, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
        KeyCode::VK_OPEN_URL_APP_iTerm,
      </autogen>
    </item>
    <item>
      <name>Hyper+N to open OneNote ("N" for "Note")</name>
      <identifier>com.jasonrudolph.hyper_n</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::N, ModifierFlag::COMMAND_R, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
        KeyCode::VK_OPEN_URL_APP_OneNote,
      </autogen>
    </item>

    <replacementdef>
      <replacementname>VIM_EMU_IGNORE_APPS</replacementname>
      <replacementvalue>TERMINAL</replacementvalue>
    </replacementdef>
  <item>
    <name>Remap CMD_R to Hyper with alt-tab on tap</name>
    <appendix>OS X doesn't have a Hyper. This maps OPTION_R to Control + Shift + Option + Command, unless you tap it.</appendix>
    <identifier>cmdR_to_hyper_or_alttab</identifier>
    <autogen>
        --KeyOverlaidModifier--
        KeyCode::COMMAND_R,

        KeyCode::COMMAND_R,
        ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
        KeyCode::TAB, ModifierFlag::COMMAND_R
    </autogen>
  </item>

  <item>
    <name>Map OPT_L to chrome inspect element on tap</name>
    <appendix>optL_to_hyper_or_chrome_inspect</appendix>
    <not>TERMINAL</not>
    <identifier>optL_to_hyper_or_chrome_inspect</identifier>

    <autogen>
        --KeyOverlaidModifier--
        KeyCode::OPTION_L,

        KeyCode::OPTION_L,
        KeyCode::C, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L
    </autogen>
  </item>

   <item>
     <name>CTRL-I to F6 in terminal</name>
     <appendix>Bring the Tab/CTRL-I combo kicking and screaming into the 21st century.</appendix>
     <identifier>private.terminal</identifier>
     <only>TERMINAL, VI</only>
     <autogen>
       __KeyToKey__ KeyCode::I,
       MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
       KeyCode::F6
     </autogen>
   </item>

  <item>
    <name>Tap opt-l for tmux git diff</name>
    <appendix>Tap opt_l for tmux git diff in terminal.</appendix>
    <only>TERMINAL</only>
    <identifier>optL_tap_git_diff</identifier>

    <autogen>
        --KeyOverlaidModifier--
        KeyCode::OPTION_L,

        KeyCode::OPTION_L,
        KeyCode::C, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L
    </autogen>
  </item>

  <item>
    <name>Tap opt-r for tmux git diff staged</name>
    <appendix>Tap opt_r for tmux git diff staged in terminal.</appendix>
    <identifier>private.tmuxstaged</identifier>
    <only>TERMINAL</only>
    <autogen>
        --KeyOverlaidModifier--
        KeyCode::OPTION_R,

        KeyCode::OPTION_R,
        KeyCode::C, ModifierFlag::OPTION_L | ModifierFlag::CONTROL_L
    </autogen>
  </item>

  <item>
    <name>FN key tap madruby execute macro</name>
    <appendix>FN execute macro</appendix>
    <identifier>fn-execute-macro</identifier>
    <not>TERMINAL</not>
    <uielementrole_not>AXTextField, AXTextArea</uielementrole_not>
    <autogen>
        --KeyOverlaidModifier--
        KeyCode::FN,

        KeyCode::FN,
        KeyCode::8, ModifierFlag::COMMAND_R, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L
    </autogen>
  </item>

  <item>
    <name>SHIFT_L key tap screenshot</name>
    <appendix>SHIFT_L screenshot</appendix>
    <identifier>SHIFT_L-tap-screenshot</identifier>
    <not>TERMINAL, STARCRAFT</not>
    <uielementrole_not>AXTextField, AXTextArea</uielementrole_not>
    <autogen>
        --KeyOverlaidModifier--
        KeyCode::SHIFT_L,

        KeyCode::SHIFT_L,
        KeyCode::4, ModifierFlag::COMMAND_L, ModifierFlag::SHIFT_L, ModifierFlag::CONTROL_L
    </autogen>
  </item>

  <item>
    <name>SHIFT_R key tap cycle same app windows</name>
    <appendix>SHIFT_R is COMMAND_L+`</appendix>
    <identifier>SHIFT_R-tap-cycle</identifier>
    <not>TERMINAL, STARCRAFT</not>
    <uielementrole_not>AXTextField, AXTextArea</uielementrole_not>
    <autogen>
        --KeyOverlaidModifier--
        KeyCode::SHIFT_R,

        KeyCode::SHIFT_R,
        KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L
    </autogen>
  </item>

  <item>
    <name>Terminal swap to make alfred work</name>
    <appendix>Terminal swap to make alfred</appendix>
    <identifier>Terminal-alfred</identifier>
    <only>TERMINAL</only>
    <autogen>
      __KeyToKey__
      KeyCode::SPACE, ModifierFlag::OPTION_L,
      KeyCode::SPACE, ModifierFlag::COMMAND_L
    </autogen>
  </item>

  <!-- coupled to tmux bind -->
    <item>
      <name>Terminal cmd meta swap with tmux zoom on tap</name>
      <appendix>CMD_L is OPT_R w tap OPT_R+`</appendix>
      <identifier>Terminal-meta-tmux-zoom-tap</identifier>
      <only>TERMINAL</only>
      <!-- <autogen> __KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_R </autogen> -->
      <autogen>
          --KeyOverlaidModifier--
          KeyCode::COMMAND_L,

          KeyCode::OPTION_L,
          KeyCode::BACKQUOTE, ModifierFlag::OPTION_L
      </autogen>
    </item>
    <item>
      <name>Map FN tap tmux in terminal</name>
      <appendix>Map FN tap to git log file history</appendix>
      <identifier>private.control.tap.tmux</identifier>
      <only>TERMINAL</only>
      <autogen>
          --KeyOverlaidModifier--
          KeyCode::FN,

          KeyCode::FN,
          KeyCode::Z, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L
      </autogen>
    </item>
    <item>
      <name>Map CONTROL_L tap tmux in terminal</name>
      <appendix>Map CONTROL_L tap to git log file full history</appendix>
      <identifier>private.control.tap.full.tmux</identifier>
      <only>TERMINAL</only>
      <autogen>
          --KeyOverlaidModifier--
          KeyCode::CONTROL_L,

          KeyCode::CONTROL_L,
          KeyCode::X, ModifierFlag::SHIFT_L, ModifierFlag::OPTION_L
      </autogen>
    </item>
  <!-- end coupled to tmux bind -->

  <item>
      <name>Tap shift to move over words</name>
      <appendix>Shift keys move the cursor one word forward or backward when pressed alone. When used with other keys they act as normal shifts.</appendix>
      <identifier>private.shifts_to_forward_backward_word</identifier>
      <not>TERMINAL</not>

      <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::SHIFT_R, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
      <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::SHIFT_L, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
  </item>

  <item>
   <name>Shifts to Parentheses</name>
   <appendix>Shifts, when pressed alone, type parentheses.  When used with other keys they're normal shifts.</appendix>
    <only>TERMINAL</only>

   <identifier>private.shifts_to_parens</identifier>

   <!-- This is the basic mapping. -->
   <autogen>
     --KeyOverlaidModifier--
     KeyCode::SHIFT_R,
     ModifierFlag::SHIFT_R | ModifierFlag::NONE,
     KeyCode::SHIFT_R, KeyCode::KEY_0,
     ModifierFlag::SHIFT_L
   </autogen>
   <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::SHIFT_L, KeyCode::KEY_9, ModifierFlag::SHIFT_R</autogen>

   <!--
     Remap the "rolls" of () and )( because it's too easy to hit one
     before finishing the other, and there's no other reason to be
     pressing both shift keys at once anyway
   -->
   <autogen>--KeyToKey-- KeyCode::SHIFT_L, ModifierFlag::SHIFT_R, KeyCode::KEY_0, ModifierFlag::SHIFT_L, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
   <autogen>--KeyToKey-- KeyCode::SHIFT_R, ModifierFlag::SHIFT_L, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>

   <!--
     Remap Rshift+Space to ') ', because when typing an end paren and
     then a space I tend to hit space before I let go of rshift.
   -->
   <autogen>--KeyToKey-- KeyCode::SPACE, ModifierFlag::SHIFT_R, KeyCode::KEY_0, ModifierFlag::SHIFT_L, KeyCode::SPACE</autogen>
  </item>

  <item>
    <name>Chrome Dev Modifier</name>
    <appendix>Alt_r :: C-Opt. Fullscreens a window if tapped</appendix>
    <identifier>private.chromedev</identifier>
    <not>TERMINAL</not>
    <autogen>
      --KeyOverlaidModifier--
      KeyCode::OPTION_R,
      KeyCode::COMMAND_L, ModifierFlag::OPTION_L,
      KeyCode::F, ModifierFlag::CONTROL_L, ModifierFlag::COMMAND_L
    </autogen>
  </item>

  <item>
    <name>Home Row Arrow Keys: COMMAND_L + SHIFT_L + IJKL to ^&lt;&gt;v</name>
    <identifier>private.coolaj86_cmd_shift_homerowarrows</identifier>
    <autogen>
        __KeyToKey__
        KeyCode::H,
        ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::NONE,
        KeyCode::CURSOR_LEFT
    </autogen>
    <autogen>
        __KeyToKey__
        KeyCode::J,
        ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::NONE,
        KeyCode::CURSOR_DOWN
    </autogen>
    <autogen>
        __KeyToKey__
        KeyCode::K,
        ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::NONE,
        KeyCode::CURSOR_UP
    </autogen>
    <autogen>
        __KeyToKey__
        KeyCode::L,
        ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L | ModifierFlag::NONE,
        KeyCode::CURSOR_RIGHT
    </autogen>
  </item>

  <item>
    <name>Vi Navigation in Preview</name>
    <appendix>Vim keys in preview.</appendix>
    <identifier>private.preview.vinav</identifier>
    <only>PREVIEW, IBOOKS</only>
    <uielementrole_not>
      AXTextField,
      AXTextArea,
      AXComboBox,
      AXMenuItem
    </uielementrole_not>
    <modifier_only>
      ModifierFlag::NONE,
      ModifierFlag::SHIFT_L | ModifierFlag::NONE,
      ModifierFlag::SHIFT_R | ModifierFlag::NONE,
    </modifier_only>
    <appendix>Navigate using the HJKL keys.</appendix>
    <appendix>Search: /, n, N.</appendix>
    <autogen>__KeyToKey__ KeyCode::J, KeyCode::CURSOR_DOWN</autogen>
    <autogen>__KeyToKey__ KeyCode::K, KeyCode::CURSOR_UP</autogen>
    <autogen>__KeyToKey__ KeyCode::H, KeyCode::CURSOR_LEFT</autogen>
    <autogen>__KeyToKey__ KeyCode::L, KeyCode::CURSOR_RIGHT</autogen>
    <autogen>__KeyToKey__ KeyCode::SLASH, KeyCode::F, ModifierFlag::COMMAND_L</autogen>
    <autogen>__KeyToKey__ KeyCode::N, KeyCode::G, ModifierFlag::COMMAND_L</autogen>
    <autogen>
      __KeyToKey__
      KeyCode::N, ModifierFlag::SHIFT_L,
      KeyCode::G, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND, ModifierFlag::SHIFT_L
    </autogen>
  </item>

  <item>
    <name>Vi Zoom in Preview</name>
    <appendix>Vim zoom keys in preview.</appendix>
    <identifier>private.preview.vizoom</identifier>
    <only>PREVIEW, IBOOKS</only>
    <uielementrole_not>
      AXTextField,
      AXTextArea,
      AXComboBox,
      AXMenuItem
    </uielementrole_not>
    <modifier_only>
        ModifierFlag::NONE,
        ModifierFlag::SHIFT_L | ModifierFlag::NONE,
        ModifierFlag::SHIFT_R | ModifierFlag::NONE,
    </modifier_only>
    <appendix>Zoom using I/O: in/out</appendix>
    <appendix>Zoom to fit: F</appendix>
    <appendix>Zoom to 100%: D</appendix>
    <autogen>__KeyToKey__ KeyCode::F, KeyCode::KEYPAD_9, VK_COMMAND</autogen>
    <autogen>__KeyToKey__ KeyCode::D, KeyCode::KEYPAD_0, VK_COMMAND</autogen>
    <autogen>__KeyToKey__ KeyCode::I, KeyCode::KEYPAD_PLUS, VK_COMMAND</autogen>
    <autogen>__KeyToKey__ KeyCode::O, KeyCode::KEYPAD_MINUS, VK_COMMAND</autogen>
  </item>

  <item>
      <name>Use the correct shift keys.</name>
      <identifier>private.correct_shift_keys</identifier>
      <not>TERMINAL</not>
      <not>GOOGLE_CHROME</not>

      <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::W, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::R, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::T, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::G, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::Z, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::V, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>

      <autogen>--KeyToKey-- KeyCode::Y,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::U,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::I,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::O,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::P,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::H,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::J,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::K,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::L,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::SEMICOLON, ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::N,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::M,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::COMMA,     ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::DOT,       ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
      <autogen>--KeyToKey-- KeyCode::QUOTE,     ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
  </item>
</root>
