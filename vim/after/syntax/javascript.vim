if exists('g:no_ruby_conceal') || !has('conceal') || &enc != 'utf-8'
	finish
endif

" syntax match jsOperator "\s\+=>\s\+" conceal cchar=‚áí
syntax match jsOperator "=\~" conceal cchar=‚âÖ
syntax match jsOperator "!\~" conceal cchar=‚âÜ
syntax match jsOperator "++" conceal cchar=Œî
syntax match jsOperator "--" conceal cchar=‚àá
syntax match jsOperator "&&" conceal cchar=‚àß
syntax match jsOperator "||=\@!" conceal cchar=‚à®
syntax match jsOperator "||=" conceal cchar=‚ä´
syntax match jsOperator " \zs\*\ze " conceal cchar=‚®â
syntax match jsOperator " \zs\/\ze "  conceal cchar=√∑

" distinguish lines beginning with method chains
syntax match jsOperator "\s\+\zs\.\ze"  conceal cchar=ÔΩ°

syntax match jsGenerator "*" conceal cchar=‚Åï

" FOO.length => FOO#
syntax keyword jsfuncCall length conceal cchar=#
syntax keyword jsFuncCall forEach conceal cchar=‚à´
syntax keyword jsFuncCall filter conceal cchar=‚àø
syntax keyword jsFuncCall reduce conceal cchar=Œª
syntax keyword jsFuncCall map conceal cchar=‚ö®
syntax keyword jsFuncCall every conceal cchar=‚àÄ
syntax keyword jsFuncCall some conceal cchar=‚àÉ
syntax keyword jsFuncCall push conceal cchar=¬´
syntax keyword jsFuncCall pop conceal cchar=¬ª
syntax keyword jsFuncCall setTimeout conceal cchar=‚ó¥

syntax keyword jsOperator typeof conceal cchar=¬§
syntax keyword jsOperator delete conceal cchar=‚òí

" rest/spread
syntax match jsOperator "\.\.\." conceal cchar=‚Ä¶
syntax match jsSpreadExpression "\.\.\." conceal cchar=‚Ä¶
syntax match jsRestExpression "\.\.\." conceal cchar=‚Ä¶

syntax match jsOperator "\s\zs<=\ze\s" conceal cchar=‚â§
syntax match jsOperator "\s\zs>=\ze\s" conceal cchar=‚â•
syntax match jsOperator /![^=]/me=e-1 conceal cchar=¬¨
syntax match jsOperator "\<not\>" conceal cchar=¬¨
syntax keyword jsOperator in conceal cchar=‚àà
syntax keyword jsExtendsKeyword extends conceal cchar=<
syntax keyword jsOperator new conceal cchar=Œº
syntax match jsOperator "=\@<!===\@!" conceal cchar=‚â°
syntax match jsOperator "=\@<!====\@!" conceal cchar=‚â£
syntax match jsOperator "\s\+!=\s\+" conceal cchar=‚â†
syntax match jsOperator "\s\+\zs!==\ze\s\+" conceal cchar=‚â¢
syntax match jsOperator "\s\+\zs!==\ze\s\+" conceal cchar=‚â¢

" syntax match jsOperator "\s^\s" conceal cchar=‚äª

syntax keyword jsBooleanTrue true conceal cchar=T
syntax keyword jsBooleanFalse false conceal cchar=F

syntax keyword jsStorageClass const conceal cchar=ùî†
syntax keyword jsStorageClass let conceal cchar= ü
" syntax keyword jsStorageClass var conceal cchar=‚±Ω
" syntax keyword jsKeyword static conceal cchar=‚à¨
syntax keyword jsGlobalObjects Promise conceal cchar=‚±£

syntax keyword jsAsyncKeyword async conceal cchar=√Ö
syntax keyword jsAsyncKeyword await conceal cchar=√•

syntax keyword jsExport export conceal cchar=E
syntax keyword jsImport import conceal cchar=…™
syntax keyword jsArguments arguments conceal cchar=»Å

syntax keyword jsGlobalObjects Boolean conceal cchar=ùîπ
syntax keyword jsGlobalObjects Integer conceal cchar=‚Ñ§
syntax keyword jsGlobalObjects String conceal cchar=Ôº≥
syntax keyword jsGlobalObjects Array conceal cchar=‚å∏
" ùíú
syntax keyword jsGlobalObjects Number conceal cchar=‚Ñú
syntax match jsGlobalObjects "\<boolean\>" conceal cchar=ùîπ
" syntax match jsGlobalObjects "\<number\>" conceal cchar=‚Ñú
" syntax match jsGlobalObjects "\<string\>" conceal cchar=‚à¨
syntax keyword jsNumber Infinity conceal cchar=‚àû
syntax match jsNumber "\<infinity\>" conceal cchar=‚àû

syntax keyword jsGlobalNodeObjects module conceal cchar=·¥ç
syntax match   jsGlobalObjects  "\<require" conceal cchar= Ä

syntax match jsNoise /;$/ conceal
" syntax match jsNoise /,$/ conceal

syntax keyword jsStatement break conceal cchar=‚Ü¥
syntax keyword jsStatement continue conceal cchar=‚Ü∞

hi! link Conceal Operator
hi! Conceal ctermbg=Black ctermfg=Magenta
"setlocal conceallevel=2
