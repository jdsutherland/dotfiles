" we need the conceal feature (vim ‚â• 7.3)
if !has('conceal')
		finish
endif

syntax match goNiceOperator ">=" conceal cchar=‚â•
syntax match goNiceOperator "<=" conceal cchar=‚â§
syntax match goNiceOperator "->" conceal cchar=‚Üí
syntax match goNiceOperator "<-" conceal cchar=Àø
syntax match goNiceOperator "=>" conceal cchar=‚áí
syntax match goNiceOperator "<=>" conceal cchar=‚áî
syntax match goNiceOperator "!=" conceal cchar=‚â†
syntax match goNiceOperator " \zs\*\ze " conceal cchar=√ó
syntax match goNiceOperator " \zs\/\ze " conceal cchar=√∑
syntax match goNiceOperator "==" conceal cchar=‚â°
syntax match goNiceOperator "\[\]" conceal cchar=‚åë
syntax match goNiceOperator ":=" conceal cchar=‚âî
syntax match goNiceOperator "||" conceal cchar=‚à®
syntax match goNiceOperator "&&" conceal cchar=‚àß
syntax match goNiceOperator /err == nil/ conceal cchar=‚úì
syntax match goNiceOperator /err != nil/ conceal cchar=‚úó

syntax match goNiceOperator "*" conceal cchar=‚Åï
syntax match goNiceOperator "\zs&\ze\w\+" conceal cchar=&
syntax match goNiceOperator "," conceal cchar=,
syntax match goNiceOperator "++" conceal cchar=Œî
syntax match goNiceOperator "--" conceal cchar=‚àá
syntax match goNiceOperator " \zs\*\ze " conceal cchar=‚®â
syntax match goNiceOperator " \zs\/\ze " conceal cchar=√∑
syntax match goNiceOperator "\.\.\." conceal cchar=‚Ä¶
" syntax match goNiceOperator "\v\w+\zs\:\ze" conceal cchar=Íûâ
" syntax match goNiceOperator "\v\w+\zs\:\ze" conceal cchar=‚Åù

syntax keyword goNiceOperator lambda conceal cchar=Œª
syntax keyword goNiceOperator proc conceal cchar=œÄ
" syntax keyword goNiceOperator function conceal cchar=∆í contained
" syntax match goType /\<func\>/ conceal cchar=∆í
" syntax match goDeclaration /^func\>/ conceal cchar=∆í
" syntax keyword goDeclaration func conceal cchar=∆í

syntax keyword goConst const conceal cchar=ùî†
syntax match goVar "\v<var " conceal cchar=@
syntax keyword goPredefinedIdentifiers nil conceal cchar=‚àÖ

syntax keyword goType interface conceal cchar=êä≠
syntax keyword goType chan conceal cchar=ƒã
syntax keyword goType bool conceal cchar=∆Ä
syntax keyword goType byte conceal cchar=‡∏ø
syntax keyword goType rune conceal cchar= Ä
syntax keyword goType string conceal cchar=‚üÜ
syntax keyword goType float32 conceal cchar=‚Ñù
syntax keyword goType float64 conceal cchar=‚Ñù
syntax keyword goType complex64 conceal cchar=‚ÑÇ
syntax keyword goType complex128 conceal cchar=‚ÑÇ
syntax keyword goType int conceal cchar=‚Ñ§
syntax keyword goType int32 conceal cchar=‚Ö∞
syntax keyword goType int64 conceal cchar=‚Ö±
syntax keyword goType uint32 conceal cchar=‚Ö†
syntax keyword goType uint64 conceal cchar=‚Ö°
syntax keyword goType error conceal cchar=…á

" syntax keyword goStatement go conceal cchar=ƒü

syntax keyword goStatement return conceal cchar=‚áö
syntax keyword goStatement break conceal cchar=‚ÜØ
syntax keyword goStatement continue conceal cchar=‚Ü∞
syntax keyword goStatement goto conceal cchar=‚Ü∑
syntax keyword goBoolean true conceal cchar=T
syntax keyword goBoolean false conceal cchar=F

syntax keyword goDeclaration type conceal cchar=‚Ç™
syntax keyword goDeclType interface conceal cchar=êä≠
syntax keyword goDeclType struct conceal cchar=‚äá
" syntax keyword goImport import conceal cchar=…™
syntax keyword goBuiltins len conceal cchar=#
" syntax keyword goBuiltins := append conceal cchar=¬´
" syntax keyword goBuiltins = append conceal cchar=¬´
syntax match goBuiltins "\v:?\= append\((\w+(\.\w+)*)?," conceal cchar=¬´
syntax keyword goBuiltins = append conceal cchar=¬´
" syntax match goMethodCall "\w\+\.Assert\ze(" conceal cchar=‚úì
syntax keyword goBuiltins make conceal cchar=Œº
syntax keyword goBuiltins new conceal cchar=Œº
syntax keyword goBuiltins delete conceal cchar=‚úó

" syntax match goNiceOperator /\S\zs()\ze\(\S\| [^{]\)/ conceal
syntax match goNiceOperator /^\s*\zs}\ze$/ conceal
syntax match goNiceOperator /\(^\s*\)\@<=\zs}\ze\s*/ conceal
" syntax match goNiceOperator /^}$/ conceal cchar=}
syntax match goNiceOperator /\ *\zs{\ze$/ conceal

hi link goNiceOperator Operator
hi! link Conceal Operator
hi! Conceal ctermbg=Black ctermfg=Magenta
