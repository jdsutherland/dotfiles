# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
# snippet emitter "emitter properties" b
# private readonly ${1} = new Emitter<$2>()
# public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
# endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet $ "template literal" i
${${1}}${2}
endsnippet

snippet otv "target: value" i
{ target: { value } }
endsnippet

snippet etv "event.target.value" i
event.target.value
endsnippet

snippet c "const" b
const ${1} = ${2}
endsnippet

snippet cld "const lambda" b
const ${1} = (${2}) => ${3}
endsnippet

snippet ld "lambda: () => " i
($1) => $2
endsnippet

snippet last "last arr ele" i
${1:arr}[$1.length - 1]${2}
endsnippet

snippet range "Array.from(Array(len)) gives [0, 1, .., len-1]" i
Array.from(Array(${1:len})${3:.keys()})$0
endsnippet

snippet Pres "Promise.resolve" i
Promise.resolve($1)$2
endsnippet
